// <auto-generated />
using System;
using LearningRussianApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LearningRussianApp.Migrations
{
    [DbContext(typeof(LearningRussianDbContext))]
    [Migration("20200316014434_added review date and status")]
    partial class addedreviewdateandstatus
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LearningRussianApp.Models.Noun", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("engWord");

                    b.Property<string>("r1");

                    b.Property<string>("r10");

                    b.Property<string>("r2");

                    b.Property<string>("r3");

                    b.Property<string>("r4");

                    b.Property<string>("r5");

                    b.Property<string>("r6");

                    b.Property<string>("r7");

                    b.Property<string>("r8");

                    b.Property<string>("r9");

                    b.Property<DateTime>("reviewDate");

                    b.Property<string>("russWord");

                    b.Property<string>("status");

                    b.HasKey("id");

                    b.HasIndex("russWord")
                        .IsUnique()
                        .HasFilter("[russWord] IS NOT NULL");

                    b.ToTable("nouns");
                });

            modelBuilder.Entity("LearningRussianApp.Models.Verb", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("engWord");

                    b.Property<string>("f1");

                    b.Property<string>("f2");

                    b.Property<string>("f3");

                    b.Property<string>("f4");

                    b.Property<string>("f5");

                    b.Property<string>("f6");

                    b.Property<string>("p1");

                    b.Property<string>("p2");

                    b.Property<string>("p3");

                    b.Property<string>("p4");

                    b.Property<string>("p5");

                    b.Property<string>("p6");

                    b.Property<string>("ps1");

                    b.Property<string>("ps2");

                    b.Property<string>("ps3");

                    b.Property<string>("ps4");

                    b.Property<DateTime>("reviewDate");

                    b.Property<string>("russWord");

                    b.Property<string>("status");

                    b.HasKey("id");

                    b.HasIndex("russWord")
                        .IsUnique()
                        .HasFilter("[russWord] IS NOT NULL");

                    b.ToTable("verbs");
                });
#pragma warning restore 612, 618
        }
    }
}
